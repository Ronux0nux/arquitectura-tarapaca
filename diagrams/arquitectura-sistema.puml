@startuml
title Diagrama de Arquitectura del Sistema - Arquitectura TarapacÃ¡

' ==================== ESTILOS ====================
skinparam rectangle {
  BackgroundColor<<frontend>> LightBlue
  BackgroundColor<<backend>> LightGreen
  BackgroundColor<<database>> LightYellow
  BackgroundColor<<cache>> Orange
  BackgroundColor<<queue>> LightCoral
  BackgroundColor<<external>> LightGray
  BackgroundColor<<new>> Yellow
}

' ==================== CAPA 1: CLIENTE ====================
rectangle "CAPA DE PRESENTACIÃ“N" <<frontend>> {
  rectangle "React 18.3" as React {
    rectangle "Componentes UI" as UI {
      [Navbar]
      [Pages]
      [Forms]
      [Tables]
    }
    
    rectangle "GestiÃ³n Estado" as State {
      [Context API]
      [Local State]
    }
    
    rectangle "Servicios" as Services {
      [API Service]
      [Auth Service]
      [Cache Service]
    }
  }
  
  rectangle "Routing" as Router {
    [React Router 7.6]
  }
  
  rectangle "Estilos" as Styles {
    [Tailwind CSS 4.1]
  }
}

' ==================== CAPA 2: SERVIDOR ====================
rectangle "CAPA DE APLICACIÃ“N" <<backend>> {
  rectangle "Node.js + Express 4.18" as NodeJS {
    
    rectangle "Middleware Stack" as Middleware {
      [CORS]
      [JSON Parser]
      [Morgan Logger] <<new>>
      [Error Handler] <<new>>
    }
    
    rectangle "Rutas API (13 mÃ³dulos)" as Routes {
      [/api/users]
      [/api/projects]
      [/api/providers]
      [/api/cotizaciones]
      [/api/insumos]
      [/api/search]
      [/api/excel]
      [/api/parser] <<new>>
      [/api/health] <<new>>
      [...]
    }
    
    rectangle "Controladores" as Controllers {
      [User Controller]
      [Project Controller]
      [Provider Controller]
      [Parser Controller] <<new>>
      [Search Controller]
      [Excel Controller]
      [...]
    }
    
    rectangle "Modelos" as Models {
      [User Model]
      [Project Model]
      [Provider Model]
      [Cotizacion Model]
      [Insumo Model]
      [...]
    }
  }
  
  rectangle "Sistema de Logs" <<new>> {
    [Winston Logger]
    [Log Rotation]
    [Log Levels]
  }
  
  rectangle "Sistema de CachÃ©" <<cache>> <<new>> {
    [Redis Client]
    [Cache Helper]
    [TTL Manager]
  }
  
  rectangle "Sistema de Colas" <<queue>> <<new>> {
    [BullMQ Manager]
    rectangle "Workers" as Workers {
      [PDF Worker]
      [Excel Worker]
      [Import Worker]
      [Search Worker]
    }
  }
}

' ==================== CAPA 3: PERSISTENCIA ====================
rectangle "CAPA DE DATOS" <<database>> {
  database "PostgreSQL 8.16" as DB {
    [users]
    [projects]
    [providers]
    [cotizaciones]
    [insumos]
    [ordenes_compra]
    [actas_reunion]
  }
  
  database "Redis 7.x" <<cache>> <<new>> {
    [Cache Data]
    [Session Data]
    [Queue Data]
  }
  
  folder "Sistema de Archivos" as FS {
    [Uploads/]
    [Logs/] <<new>>
    [Backups/]
  }
}

' ==================== SERVICIOS EXTERNOS ====================
rectangle "SERVICIOS EXTERNOS" <<external>> {
  cloud "APIs de ConstrucciÃ³n" as APIs {
    [SerpAPI]
    [Sodimac API]
    [Easy API]
    [Construmart API]
  }
  
  cloud "Documentos" as Docs {
    [PDF Files]
    [Excel/CSV Files]
  }
}

' ==================== CONEXIONES ====================

' Cliente â†’ Servidor
React --> Middleware : HTTP/HTTPS
Router --> Routes
Services --> Routes

' Middleware â†’ Controladores
Middleware --> Routes
Routes --> Controllers
Controllers --> Models

' Logs
Middleware --> Winston
Controllers --> Winston
Winston --> FS

' CachÃ©
Controllers --> Redis
Cache Helper --> Redis

' Colas
Controllers --> BullMQ
Workers --> BullMQ
BullMQ --> Redis

' Base de Datos
Models --> DB

' Archivos
Controllers --> FS

' APIs Externas
Controllers --> APIs
Controllers --> Docs

' ==================== FLUJOS PRINCIPALES ====================
note right of React
  **Puerto: 3000**
  - Interfaz de usuario
  - Experiencia interactiva
  - Client-side rendering
end note

note right of NodeJS
  **Puerto: 5000**
  - API REST
  - LÃ³gica de negocio
  - Validaciones
  - AutenticaciÃ³n JWT
end note

note right of Redis
  **Puerto: 6379**
  ðŸ†• Funciones:
  - CachÃ© de datos (TTL: 1h)
  - Backend de colas
  - Sesiones (futuro)
end note

note right of DB
  **Puerto: 5432**
  - Datos persistentes
  - Relaciones
  - Transacciones ACID
end note

note bottom of Sistema de Logs
  ðŸ†• **Archivos generados:**
  - error.log (errores)
  - combined.log (todos)
  - http.log (peticiones)
  
  **RotaciÃ³n:** 5MB mÃ¡x
end note

note bottom of Sistema de Colas
  ðŸ†• **Colas disponibles:**
  - pdf-processing
  - excel-processing
  - provider-import
  - search-processing
  
  **Reintentos:** 3 intentos
end note

@enduml
